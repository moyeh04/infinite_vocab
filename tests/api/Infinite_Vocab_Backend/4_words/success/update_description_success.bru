meta {
  name: update_description_success
  type: http
  seq: 9
}

patch {
  url: {{apiUrl}}/api/v1/words/{{wordId}}/descriptions/{{descriptionId}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

body:json {
  {
    "descriptionText": "Updated advanced and original methods description"
  }
}

tests {
  test("Status is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response has camelCase fields", function() {
    expect(res.body).to.have.property('wordId');
    expect(res.body).to.have.property('descriptionId');
    expect(res.body).to.have.property('message');
  });
  
  test("Success message present", function() {
    expect(res.body.message).to.contain('successfully');
    expect(res.body.message).to.contain('updated');
  });
  
  test("Description ID is present", function() {
    expect(res.body.descriptionId).to.be.a('string');
    expect(res.body.descriptionId.length).to.be.greaterThan(0);
  });
  
  test("Word ID matches", function() {
    expect(res.body.wordId).to.equal(bru.getVar("wordId"));
  });
}
