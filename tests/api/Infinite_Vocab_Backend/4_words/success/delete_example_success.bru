meta {
  name: delete_example_success
  type: http
  seq: 12
}

delete {
  url: {{apiUrl}}/api/v1/words/{{wordId}}/examples/{{exampleId}}
  body: none
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
}

tests {
  test("Status is 200", function() {
    expect(res.status).to.equal(200);
  });

  test("Response has camelCase fields", function() {
    expect(res.body).to.have.property('wordId');
    expect(res.body).to.have.property('exampleId');
    expect(res.body).to.have.property('message');
  });

  test("Success message present", function() {
    expect(res.body.message).to.contain('successfully');
    expect(res.body.message).to.contain('deleted');
  });

  test("Example ID is present", function() {
    expect(res.body.exampleId).to.be.a('string');
    expect(res.body.exampleId.length).to.be.greaterThan(0);
  });

  test("Word ID matches", function() {
    expect(res.body.wordId).to.equal(bru.getVar("wordId"));
  });
}
