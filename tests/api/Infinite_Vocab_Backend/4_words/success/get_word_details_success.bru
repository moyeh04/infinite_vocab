meta {
  name: get_word_details_success
  type: http
  seq: 3
}

get {
  url: {{apiUrl}}/api/v1/words/{{wordId}}
  body: none
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

tests {
  test("Status is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response has camelCase fields", function() {
    expect(res.body).to.have.property('wordId');
    expect(res.body).to.have.property('userId');
    expect(res.body).to.have.property('wordText');
    expect(res.body).to.have.property('createdAt');
    expect(res.body).to.have.property('updatedAt');
  });
  
  test("Response includes descriptions and examples", function() {
    expect(res.body).to.have.property('descriptions');
    expect(res.body).to.have.property('examples');
    expect(res.body.descriptions).to.be.an('array');
    expect(res.body.examples).to.be.an('array');
  });
}
