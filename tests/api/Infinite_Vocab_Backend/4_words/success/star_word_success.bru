meta {
  name: star_word_success
  type: http
  seq: 5
}

post {
  url: {{apiUrl}}/api/v1/words/{{wordId}}/star
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

tests {
  test("Status is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response has success message", function() {
    expect(res.body).to.have.property('message');
    expect(res.body.message).to.contain('Successfully');
  });
  
  test("Response includes wordId", function() {
    expect(res.body).to.have.property('wordId');
    expect(res.body.wordId).to.equal(bru.getVar('wordId'));
  });
  
  test("Response includes new star count", function() {
    expect(res.body).to.have.property('newStarCount');
    expect(res.body.newStarCount).to.be.a('number');
    expect(res.body.newStarCount).to.be.greaterThan(0);
  });
}
