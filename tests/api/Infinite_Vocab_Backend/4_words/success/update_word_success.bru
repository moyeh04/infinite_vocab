meta {
  name: update_word_success
  type: http
  seq: 4
}

patch {
  url: {{apiUrl}}/api/v1/words/{{wordId}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

body:json {
  {
    "word": "innovative - updated"
  }
}

tests {
  test("Status is 200", function() {
    expect(res.status).to.equal(200);
  });

  test("Response has camelCase fields", function() {
    expect(res.body).to.have.property('wordId');
    expect(res.body).to.have.property('updatedWordDetails');
    expect(res.body).to.have.property('message');
  });

  test("Success message present", function() {
    expect(res.body.message).to.contain('successfully updated');
  });

  test("Updated word details present", function() {
    expect(res.body.updatedWordDetails).to.have.property('word');
    expect(res.body.updatedWordDetails.word).to.equal('innovative - updated');
    expect(res.body.updatedWordDetails).to.have.property('createdAt');
    expect(res.body.updatedWordDetails).to.have.property('updatedAt');
  });
}
