meta {
  name: delete_word_not_found
  type: http
  seq: 3
}

delete {
  url: {{apiUrl}}/api/v1/words/nonexistent_word_id
  auth: none
}

headers {
  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

tests {
  test("Status is 404", function() {
    expect(res.status).to.equal(404);
  });

  test("Response has error field", function() {
    expect(res.body).to.have.property('error');
  });

  test("Error message mentions not found", function() {
    expect(res.body.error.toLowerCase()).to.match(/(not found|does not exist)/);
  });
}
