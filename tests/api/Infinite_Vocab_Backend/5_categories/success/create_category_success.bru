meta {
  name: create_category_success
  type: http

  seq: 1
}

post {
  url: {{apiUrl}}/api/v1/categories/
  body: json
  auth: none
}

headers {

  Authorization: Bearer {{idToken}}
  Content-Type: application/json
}

body:json {
  {
    "categoryName": "Science Terms",
    "categoryColor": "#4A90E2"
  }
}

tests {
  test("Status is 201", function() {
    expect(res.status).to.equal(201);
  });
  
  test("Response has camelCase fields", function() {
    expect(res.body).to.have.property('categoryId');
    expect(res.body).to.have.property('userId');
    expect(res.body).to.have.property('categoryName');

    expect(res.body).to.have.property('categoryColor');
    expect(res.body).to.have.property('createdAt');
  });
  
  test("Category name is title cased", function() {
    expect(res.body.categoryName).to.equal('Science Terms');
  });
  
  test("Category color is lowercase", function() {
    expect(res.body.categoryColor).to.equal('#4a90e2');
  });
  
  test("User ID matches authenticated user", function() {
    expect(res.body.userId).to.be.a('string');
    expect(res.body.userId).to.have.length.greaterThan(0);
  });
  
  test("Category ID is generated", function() {
    expect(res.body.categoryId).to.be.a('string');

    expect(res.body.categoryId).to.have.length.greaterThan(0);
  });
  
  test("Created timestamp exists", function() {
    expect(res.body.createdAt).to.be.a('string');
  });
}

vars:post-response {
  categoryId: res.body.categoryId
}
